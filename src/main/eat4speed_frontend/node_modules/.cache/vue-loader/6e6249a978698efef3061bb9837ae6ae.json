{"remainingRequest":"C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\src\\views\\Kunde\\Kunde.vue?vue&type=template&id=426db711&scoped=true&","dependencies":[{"path":"C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\src\\views\\Kunde\\Kunde.vue","mtime":1621272038462},{"path":"C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}