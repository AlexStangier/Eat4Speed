{"remainingRequest":"C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\src\\views\\Restaurant\\RestaurantSchichtplan.vue?vue&type=template&id=2658bf32&scoped=true&","dependencies":[{"path":"C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\src\\views\\Restaurant\\RestaurantSchichtplan.vue","mtime":1621272038463},{"path":"C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\mosab\\IdeaProjects\\Eat4Speed\\src\\main\\eat4speed_frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}